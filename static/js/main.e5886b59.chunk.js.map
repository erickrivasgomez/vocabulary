{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","axios","post","process","state","then","response","console","log","term","meaning","spanish","commments","this","comments","Container","fluid","className","Header","as","Form","onSubmit","Field","placeholder","type","onChange","Button","color","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAKqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,cAAgB,SAACC,GACf,EAAKC,SAAL,eAAgBD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOE,SAZzB,EAenBC,cAAgB,SAAAL,GACdA,EAAEM,iBAIFC,IAAMC,KAFMC,qEAEI,EAAKC,OACpBC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,OAnBd,EAAKF,MAAQ,CACVK,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,UAAW,IAPG,E,0CA0BnB,WAAU,IAAD,EACsCC,KAAKT,MAA1CK,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,QAASG,EADzB,EACyBA,SAChC,OACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,YAA3B,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,yBACA,eAACC,EAAA,EAAD,CAAMH,UAAU,OAAOI,SAAUR,KAAKd,cAAtC,UACE,eAACqB,EAAA,EAAKE,MAAN,WACE,sDACA,uBAAOC,YAAY,kBAAkBC,KAAK,OAAO3B,KAAO,OAAOC,MAASW,EAAMgB,SAAUZ,KAAKpB,mBAE/F,eAAC2B,EAAA,EAAKE,MAAN,WACE,0DACA,uBAAOC,YAAY,iBAAiBC,KAAK,OAAO3B,KAAO,UAAUC,MAASY,EAASe,SAAUZ,KAAKpB,mBAEpG,eAAC2B,EAAA,EAAKE,MAAN,WACE,yDACA,uBAAOC,YAAY,oBAAoBC,KAAK,OAAO3B,KAAO,UAAUC,MAASa,EAASc,SAAUZ,KAAKpB,mBAEvG,eAAC2B,EAAA,EAAKE,MAAN,WACE,2DACA,uBAAOC,YAAY,mBAAmBC,KAAK,OAAO3B,KAAO,WAAWC,MAASgB,EAAUW,SAAUZ,KAAKpB,mBAGxG,cAACiC,EAAA,EAAD,CAAQC,MAAM,OAAOH,KAAK,SAA1B,8B,GAlDuBI,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e5886b59.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Container, Header } from 'semantic-ui-react'\nimport './App.css';\nimport axios from 'axios';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       term: '',\n       meaning: '',\n       spanish: '',\n       commments: ''\n    }\n  }\n\n  changeHandler = (e) => {\n    this.setState({[e.target.name] : e.target.value})\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n    \n    const url = process.env.REACT_APP_GOOGLE_SHEET_URL;\n\n    axios.post(url, this.state)\n    .then(response => {\n      console.log(response);\n    })\n  }\n\n  render() {\n    const { term, meaning, spanish, comments } = this.state;\n    return (\n      <Container fluid className=\"container\">\n        <Header as='h2'>Vocabulary!</Header>\n        <Form className=\"form\" onSubmit={this.submitHandler}>\n          <Form.Field>\n            <label>Term / Término</label>\n            <input placeholder='Enter your name' type=\"text\" name = \"term\" value = {term} onChange={this.changeHandler}/>\n          </Form.Field>\n          <Form.Field>\n            <label>Meaning / Significado</label>\n            <input placeholder='Enter your age' type=\"text\" name = \"meaning\" value = {meaning} onChange={this.changeHandler}/>\n          </Form.Field>\n          <Form.Field>\n            <label>Spanish / Español</label>\n            <input placeholder='Enter your salary' type=\"text\" name = \"spanish\" value = {spanish} onChange={this.changeHandler}/>\n          </Form.Field>\n          <Form.Field>\n            <label>Comments / Comentarios</label>\n            <input placeholder='Enter your hobby' type=\"text\" name = \"comments\" value = {comments} onChange={this.changeHandler}/>\n          </Form.Field>\n          \n          <Button color=\"blue\" type='submit'>Accept</Button>\n        </Form>\n      </Container>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}